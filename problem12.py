#!/usr/bin/env python
# The sequence of triangle numbers is generated by adding the natural
# numbers. So the 7th triangle number would be
# 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five
# divisors.
# What is the value of the first triangle number to have over five
# hundred divisors?
import math


def count_divisors(a):
    c = 0
    for i in xrange(1, int(math.sqrt(a))+1):
        if a % i == 0:
            if i*i == a:
                c += 1
            else:
                c += 2
    return c


cnt = 1
tri = 1
n = 1
while cnt <= 500:
    n += 1
    tri += n
    cnt = count_divisors(tri)
    print tri, cnt
print "Res=", tri, "Cnt=", cnt
